pipeline {
    agent any
    stages {
        stage('Build') {
            steps {
                echo 'Building...'
                // Add build steps here
            }
        }
        stage('Unit and Integration Tests') {
            steps {
                echo 'Performing Unit Testing using JUnit...'
                echo 'Performing Integration Testing using Selenium WebDriver...'

                script {
                    def logFilePathNew = "${env.WORKSPACE}/test-output.log"

                    sh """
                    echo 'Starting unit testing using JUnit...' > ${logFilePathNew}
                    echo 'Testing the feature working...' >> ${logFilePathNew}
                    echo 'Unit testing completed and no issues found' >> ${logFilePathNew}
                    echo '\n\nStarting Integration testing using Selenium WebDriver...' >> ${logFilePathNew}
                    echo 'End to End Testing of the complete product working...' >> ${logFilePathNew}
                    echo 'Integration testing completed and no issues found' >> ${logFilePathNew}
                    """
                }
            }
        }
        stage('Code Analysis') {
            steps {
                echo 'Analyzing Code...'
                // Add code analysis steps here
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Performing Security Scan...'
                // Add security scan steps here
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to Staging...'
                // Add deployment steps here
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Running Integration Tests on Staging...'
                // Add integration test steps here
            }
        }
        stage('Deploy to Production') {
            steps {
                echo 'Deploying to Production...'
                // Add production deployment steps here
            }
        }
    }
    post {
        success {
            emailext attachmentsPattern: 'test-output.log',
                     body: "Build ${env.BUILD_NUMBER} of ${env.JOB_NAME} was successful.\n\nThe Unit Testing and Integration testing completed successfully.",
                     subject: "SUCCESS: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                     to: 'asgaurav9@gmail.com'
        }
        failure {
            emailext attachmentsPattern: 'test-output.log',
                     body: "Build ${env.BUILD_NUMBER} of ${env.JOB_NAME} failed. Please check the attached logs for details.",
                     subject: "FAILURE: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'",
                     to: 'asgaurav9@gmail.com'
        }
        always {
            echo 'Pipeline completed.'
        }
    }
}
